name: Deploy

on:
  workflow_run:
    workflows: [ "Build" ]
    types:
      - completed

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: us-east-1

      - name: Update kubeconfig
        run: aws eks update-kubeconfig --name techchallenge --region us-east-1

      - name: Delete Kubernetes Resources for api-payments
        run: |
          kubectl delete deployment api-payments -n default
          kubectl delete service api-payments-service -n default
          kubectl delete pod -l app=api-payments -n default
          kubectl delete hpa app-hpa-api-payments -n default
          kubectl delete rolebinding -l app=api-payments -n default
          kubectl delete configmap api-payments-config -n default
          kubectl delete rolebinding -l app=api-payments -n default

      - name: Get DocumentDB credentials from SSM Parameter Store
        id: get-parameters
        run: |
          CLUSTER_NAME=$(aws ssm get-parameter --name "/techchallenge/api_payments/atlas/cluster_name" --with-decryption --query "Parameter.Value" --output text)
          DB_NAME=$(aws ssm get-parameter --name "/techchallenge/api_payments/atlas/db_name" --with-decryption --query "Parameter.Value" --output text)
          echo "CLUSTER_NAME=$CLUSTER_NAME" >> $GITHUB_ENV
          echo "DB_NAME=$DB_NAME" >> $GITHUB_ENV

      - name: Kubectl tool installer
        uses: Azure/setup-kubectl@v4.0.0
        with:
          version: latest

      - name: Update ConfigMap with DocumentDB credentials
        run: |
          kubectl apply -f k8s/app-configmap.yaml
          kubectl patch configmap api-payments-config --type=merge -p='{"data": {"DB_NAME": "'"$DB_NAME"'", "CLUSTER_NAME": "'"$CLUSTER_NAME"'"}}'

      - name: Deploy Application
        run: |
          kubectl apply -f k8s/app-deployment.yaml
          kubectl apply -f k8s/app-service.yaml
          kubectl apply -f k8s/app-hpa.yaml
          kubectl apply -f k8s/metrics.yaml
          kubectl apply -f k8s/role.yaml
          kubectl apply -f k8s/rolebinding.yaml